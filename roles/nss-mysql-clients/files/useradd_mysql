#!/bin/bash

AUTHDB=auth

SHELL=/bin/sh
GROUP=100
MYHOME=/home
INACTIVE=-1
EXPIRE=
SKEL=/etc/skel
CREATE_MAIL_SPOOL=yes

DB=$(grep database /etc/libnss-mysql.cfg | awk '{print $2}')
DBHost=$(grep host /etc/libnss-mysql.cfg | awk '{print $2}')
RootUser=$(grep username /etc/libnss-mysql-root.cfg  | awk '{print $2}')
RootPW=$(grep password /etc/libnss-mysql-root.cfg  | awk '{print $2}')


DefaultsFile="/etc/defaults/useradd"
[ -e "$DefaultsFile" ] && . "$DefaultsFile"

DefaultAddUserConf="/etc/adduser.conf"
[ -e "$DefaultAddUserConf" ] && . "$DefaultAddUserConf"


function sys {
	[ -n "${opt_n}${opt_v}" ] && echo "$@" 1>&2

	if [ -z "$opt_n" ]
	then
		"$@"
	fi
}

#
# opt_v executes mysql and passes the mysql to stdout
# opt_n no-ops the mysql command, and only copys input to output
#
function verbMySQL {
	if [ -z "$opt_n" ]
	then
	    if [ -n "$opt_v" ]
	    then
		tee >(mysql -Bsh "$DBHost" $AUTHDB 1>&2)
	    else
		mysql -Bsh "$DBHost" $AUTHDB 1>&2
	    fi
	else
	    cat
	fi
}

function encryptPassword {
	openssl passwd -1 "$1"
}

function genUserAddSQL {

   	local SQLUName="$1"
	local SQLEPW="$2"
	local SQLUID="$3"
	local SQLGID="$4"
	local SQLGECOS="$5"
	local SQLHDir="$6"
	local SQLShell="$7"
	
	cat << EOF 
	INSERT INTO users (username,password,uid,gid,gecos,homedir,shell)
	    VALUES ('$SQLUName', '$SQLEPW', '$SQLUID', '$SQLGID', '$SQLGECOS', '$SQLHDir', '$SQLShell');
EOF
}

function genGroupAddSQL {

        local SQLGName="$1"
	local SQLGID="$2"

	cat <<EOF
	INSERT INTO groups (name,gid)
	    VALUES ('$SQLGName','$SQLGID');
EOF
}

function genGroupAddUserSQL {

    	local SQLGID="$1"
	local i
	shift

	for i in "$@"
	do
	    cat << EOF
	INSERT INTO grouplist (gid,username)
	    VALUES ($SQLGID,'$i');
EOF
	done
}

function userAdd2DB {
    	genUserAddSQL "$@" | verbMySQL
}

function groupAdd2DB {
	genGroupAddSQL "$@" | verbMySQL
}

function groupAddUser2DB {
	genGroupAddUserSQL "$@" | verbMySQL
}

function nextUid {
	local Uid=$(mysql -Bsh "$DBHost" -e 'SELECT uid FROM users ORDER BY uid DESC LIMIT 1' auth)
	echo $((++Uid))
}

function nextSysUid {
	local SysUid=$(mysql -Bsh "$DBHost" -e "SELECT uid FROM users WHERE uid >= $FIRST_SYSTEM_UID and uid <= $LAST_SYSTEM_UID ORDER BY gid DESC LIMIT 1" auth)

	if [ -z "$SysUID" ]
	then
		SysUid=$FIRST_SYSTEM_UID
	fi

	echo $SysUid
}

function nextGid {
	local Gid=$(mysql -Bsh "$DBHost" -e 'select gid from groups order by gid desc limit 1' auth)
	echo $((++Gid))
}

while getopts "b:c:d:e:f:g:G:hk:K:lmMNop:rR:s:u:Uz" arg
do
	case $arg in
	    #
	    # Ignore these flags for now
	    #
	    b|D|e|f|k|K|l|N|o|R|z)
		;;
	    *)
		eval "opt_${arg}=${OPTARG:=1}"
		;;
	esac
done

shift $((OPTIND - 1))

UName=$1

if [ -n "$opt_c" ]
then
	GeCOS="$opt_c"
else
	GeCOS="$UName"
fi

if [ -n "$opt_d" ]
then
	HDir="$opt_d"
else
	HDir="$MYHOME/$UName"
fi

if [ -n "$opt_g" ]
then
	Gid=$opt_g
else
	Gid=$(nextGid)
fi

if [ -n "$opt_m" ]
then
	CREATE_HOME=1
fi

if [ -n "$opt_p" ]
then
	EPW=$(encryptPassword "$opt_p")
else
	EPW='x'
fi

if [ -n "$opt_s" ]
then
	SHELL="$opt_s"
fi

if [ -n "$opt_u" ]
then
	Uid=$opt_u
else
	if [ -n "$opt_r" ]
	then
	    Uid=$(nextSysUid)
	else
	    Uid=$(nextUid)
	fi
fi


userAdd2DB "$UName" "$EPW" "$Uid" "$Gid" "$GeCOS" "$HDir" "$SHELL"
groupAdd2DB "$GName" "$Gid"
groupAddUser2DB "$Gid" "$UName"

if [ -n "$CREATE_HOME" ]
then
	[ -e "$HDir" ] || sys mkdir "$HDir"
	sys rsync -a "${SKEL}/" "$HDir/"
	sys chown -R "${UName}.${Gid}" "$HDir"
fi
